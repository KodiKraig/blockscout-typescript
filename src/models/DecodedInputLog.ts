/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DecodedInputLogParameter } from './DecodedInputLogParameter';
import {
    DecodedInputLogParameterFromJSON,
    DecodedInputLogParameterFromJSONTyped,
    DecodedInputLogParameterToJSON,
} from './DecodedInputLogParameter';

/**
 * 
 * @export
 * @interface DecodedInputLog
 */
export interface DecodedInputLog {
    /**
     * 
     * @type {string}
     * @memberof DecodedInputLog
     */
    methodCall: string;
    /**
     * 
     * @type {string}
     * @memberof DecodedInputLog
     */
    methodId: string;
    /**
     * 
     * @type {Array<DecodedInputLogParameter>}
     * @memberof DecodedInputLog
     */
    parameters: Array<DecodedInputLogParameter>;
}

/**
 * Check if a given object implements the DecodedInputLog interface.
 */
export function instanceOfDecodedInputLog(value: object): boolean {
    if (!('methodCall' in value)) return false;
    if (!('methodId' in value)) return false;
    if (!('parameters' in value)) return false;
    return true;
}

export function DecodedInputLogFromJSON(json: any): DecodedInputLog {
    return DecodedInputLogFromJSONTyped(json, false);
}

export function DecodedInputLogFromJSONTyped(json: any, ignoreDiscriminator: boolean): DecodedInputLog {
    if (json == null) {
        return json;
    }
    return {
        
        'methodCall': json['method_call'],
        'methodId': json['method_id'],
        'parameters': ((json['parameters'] as Array<any>).map(DecodedInputLogParameterFromJSON)),
    };
}

export function DecodedInputLogToJSON(value?: DecodedInputLog | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'method_call': value['methodCall'],
        'method_id': value['methodId'],
        'parameters': ((value['parameters'] as Array<any>).map(DecodedInputLogParameterToJSON)),
    };
}

