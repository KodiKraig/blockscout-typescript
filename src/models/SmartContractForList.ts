/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressParam } from './AddressParam';
import {
    AddressParamFromJSON,
    AddressParamFromJSONTyped,
    AddressParamToJSON,
} from './AddressParam';

/**
 * 
 * @export
 * @interface SmartContractForList
 */
export interface SmartContractForList {
    /**
     * 
     * @type {AddressParam}
     * @memberof SmartContractForList
     */
    address: AddressParam;
    /**
     * 
     * @type {string}
     * @memberof SmartContractForList
     */
    coinBalance: string;
    /**
     * 
     * @type {string}
     * @memberof SmartContractForList
     */
    compilerVersion: string;
    /**
     * 
     * @type {string}
     * @memberof SmartContractForList
     */
    language: string;
    /**
     * 
     * @type {boolean}
     * @memberof SmartContractForList
     */
    hasConstructorArgs: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof SmartContractForList
     */
    optimizationEnabled: boolean;
    /**
     * 
     * @type {number}
     * @memberof SmartContractForList
     */
    transactionCount?: number;
    /**
     * 
     * @type {string}
     * @memberof SmartContractForList
     */
    verifiedAt: string;
    /**
     * 
     * @type {number}
     * @memberof SmartContractForList
     */
    marketCap?: number;
}

/**
 * Check if a given object implements the SmartContractForList interface.
 */
export function instanceOfSmartContractForList(value: object): boolean {
    if (!('address' in value)) return false;
    if (!('coinBalance' in value)) return false;
    if (!('compilerVersion' in value)) return false;
    if (!('language' in value)) return false;
    if (!('hasConstructorArgs' in value)) return false;
    if (!('optimizationEnabled' in value)) return false;
    if (!('verifiedAt' in value)) return false;
    return true;
}

export function SmartContractForListFromJSON(json: any): SmartContractForList {
    return SmartContractForListFromJSONTyped(json, false);
}

export function SmartContractForListFromJSONTyped(json: any, ignoreDiscriminator: boolean): SmartContractForList {
    if (json == null) {
        return json;
    }
    return {
        
        'address': AddressParamFromJSON(json['address']),
        'coinBalance': json['coin_balance'],
        'compilerVersion': json['compiler_version'],
        'language': json['language'],
        'hasConstructorArgs': json['has_constructor_args'],
        'optimizationEnabled': json['optimization_enabled'],
        'transactionCount': json['transaction_count'] == null ? undefined : json['transaction_count'],
        'verifiedAt': json['verified_at'],
        'marketCap': json['market_cap'] == null ? undefined : json['market_cap'],
    };
}

export function SmartContractForListToJSON(value?: SmartContractForList | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'address': AddressParamToJSON(value['address']),
        'coin_balance': value['coinBalance'],
        'compiler_version': value['compilerVersion'],
        'language': value['language'],
        'has_constructor_args': value['hasConstructorArgs'],
        'optimization_enabled': value['optimizationEnabled'],
        'transaction_count': value['transactionCount'],
        'verified_at': value['verifiedAt'],
        'market_cap': value['marketCap'],
    };
}

