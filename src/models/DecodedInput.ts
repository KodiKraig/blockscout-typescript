/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { DecodedInputParameter } from './DecodedInputParameter';
import {
    DecodedInputParameterFromJSON,
    DecodedInputParameterFromJSONTyped,
    DecodedInputParameterToJSON,
} from './DecodedInputParameter';

/**
 * 
 * @export
 * @interface DecodedInput
 */
export interface DecodedInput {
    /**
     * 
     * @type {string}
     * @memberof DecodedInput
     */
    methodCall: string;
    /**
     * 
     * @type {string}
     * @memberof DecodedInput
     */
    methodId: string;
    /**
     * 
     * @type {Array<DecodedInputParameter>}
     * @memberof DecodedInput
     */
    parameters: Array<DecodedInputParameter>;
}

/**
 * Check if a given object implements the DecodedInput interface.
 */
export function instanceOfDecodedInput(value: object): boolean {
    if (!('methodCall' in value)) return false;
    if (!('methodId' in value)) return false;
    if (!('parameters' in value)) return false;
    return true;
}

export function DecodedInputFromJSON(json: any): DecodedInput {
    return DecodedInputFromJSONTyped(json, false);
}

export function DecodedInputFromJSONTyped(json: any, ignoreDiscriminator: boolean): DecodedInput {
    if (json == null) {
        return json;
    }
    return {
        
        'methodCall': json['method_call'],
        'methodId': json['method_id'],
        'parameters': ((json['parameters'] as Array<any>).map(DecodedInputParameterFromJSON)),
    };
}

export function DecodedInputToJSON(value?: DecodedInput | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'method_call': value['methodCall'],
        'method_id': value['methodId'],
        'parameters': ((value['parameters'] as Array<any>).map(DecodedInputParameterToJSON)),
    };
}

