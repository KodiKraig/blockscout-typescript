/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressNFTInstanceCollection } from './AddressNFTInstanceCollection';
import {
    AddressNFTInstanceCollectionFromJSON,
    AddressNFTInstanceCollectionFromJSONTyped,
    AddressNFTInstanceCollectionToJSON,
} from './AddressNFTInstanceCollection';
import type { TokenInfo } from './TokenInfo';
import {
    TokenInfoFromJSON,
    TokenInfoFromJSONTyped,
    TokenInfoToJSON,
} from './TokenInfo';

/**
 * 
 * @export
 * @interface AddressNFTCollection
 */
export interface AddressNFTCollection {
    /**
     * 
     * @type {TokenInfo}
     * @memberof AddressNFTCollection
     */
    token: TokenInfo;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTCollection
     */
    amount?: string;
    /**
     * 
     * @type {Array<AddressNFTInstanceCollection>}
     * @memberof AddressNFTCollection
     */
    tokenInstances: Array<AddressNFTInstanceCollection>;
}

/**
 * Check if a given object implements the AddressNFTCollection interface.
 */
export function instanceOfAddressNFTCollection(value: object): boolean {
    if (!('token' in value)) return false;
    if (!('tokenInstances' in value)) return false;
    return true;
}

export function AddressNFTCollectionFromJSON(json: any): AddressNFTCollection {
    return AddressNFTCollectionFromJSONTyped(json, false);
}

export function AddressNFTCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNFTCollection {
    if (json == null) {
        return json;
    }
    return {
        
        'token': TokenInfoFromJSON(json['token']),
        'amount': json['amount'] == null ? undefined : json['amount'],
        'tokenInstances': ((json['token_instances'] as Array<any>).map(AddressNFTInstanceCollectionFromJSON)),
    };
}

export function AddressNFTCollectionToJSON(value?: AddressNFTCollection | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'token': TokenInfoToJSON(value['token']),
        'amount': value['amount'],
        'token_instances': ((value['tokenInstances'] as Array<any>).map(AddressNFTInstanceCollectionToJSON)),
    };
}

