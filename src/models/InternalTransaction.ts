/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressParam } from './AddressParam';
import {
    AddressParamFromJSON,
    AddressParamFromJSONTyped,
    AddressParamToJSON,
} from './AddressParam';

/**
 * 
 * @export
 * @interface InternalTransaction
 */
export interface InternalTransaction {
    /**
     * 
     * @type {number}
     * @memberof InternalTransaction
     */
    block: number;
    /**
     * 
     * @type {AddressParam}
     * @memberof InternalTransaction
     */
    createdContract: AddressParam;
    /**
     * 
     * @type {string}
     * @memberof InternalTransaction
     */
    error: string;
    /**
     * 
     * @type {AddressParam}
     * @memberof InternalTransaction
     */
    from: AddressParam;
    /**
     * 
     * @type {string}
     * @memberof InternalTransaction
     */
    gasLimit: string;
    /**
     * 
     * @type {number}
     * @memberof InternalTransaction
     */
    index: number;
    /**
     * 
     * @type {boolean}
     * @memberof InternalTransaction
     */
    success: boolean;
    /**
     * 
     * @type {string}
     * @memberof InternalTransaction
     */
    timestamp: string;
    /**
     * 
     * @type {AddressParam}
     * @memberof InternalTransaction
     */
    to: AddressParam;
    /**
     * 
     * @type {string}
     * @memberof InternalTransaction
     */
    transactionHash: string;
    /**
     * 
     * @type {string}
     * @memberof InternalTransaction
     */
    type: string;
    /**
     * 
     * @type {string}
     * @memberof InternalTransaction
     */
    value: string;
}

/**
 * Check if a given object implements the InternalTransaction interface.
 */
export function instanceOfInternalTransaction(value: object): boolean {
    if (!('block' in value)) return false;
    if (!('createdContract' in value)) return false;
    if (!('error' in value)) return false;
    if (!('from' in value)) return false;
    if (!('gasLimit' in value)) return false;
    if (!('index' in value)) return false;
    if (!('success' in value)) return false;
    if (!('timestamp' in value)) return false;
    if (!('to' in value)) return false;
    if (!('transactionHash' in value)) return false;
    if (!('type' in value)) return false;
    if (!('value' in value)) return false;
    return true;
}

export function InternalTransactionFromJSON(json: any): InternalTransaction {
    return InternalTransactionFromJSONTyped(json, false);
}

export function InternalTransactionFromJSONTyped(json: any, ignoreDiscriminator: boolean): InternalTransaction {
    if (json == null) {
        return json;
    }
    return {
        
        'block': json['block'],
        'createdContract': AddressParamFromJSON(json['created_contract']),
        'error': json['error'],
        'from': AddressParamFromJSON(json['from']),
        'gasLimit': json['gas_limit'],
        'index': json['index'],
        'success': json['success'],
        'timestamp': json['timestamp'],
        'to': AddressParamFromJSON(json['to']),
        'transactionHash': json['transaction_hash'],
        'type': json['type'],
        'value': json['value'],
    };
}

export function InternalTransactionToJSON(value?: InternalTransaction | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'block': value['block'],
        'created_contract': AddressParamToJSON(value['createdContract']),
        'error': value['error'],
        'from': AddressParamToJSON(value['from']),
        'gas_limit': value['gasLimit'],
        'index': value['index'],
        'success': value['success'],
        'timestamp': value['timestamp'],
        'to': AddressParamToJSON(value['to']),
        'transaction_hash': value['transactionHash'],
        'type': value['type'],
        'value': value['value'],
    };
}

