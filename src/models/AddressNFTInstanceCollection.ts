/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressParam } from './AddressParam';
import {
    AddressParamFromJSON,
    AddressParamFromJSONTyped,
    AddressParamToJSON,
} from './AddressParam';

/**
 * 
 * @export
 * @interface AddressNFTInstanceCollection
 */
export interface AddressNFTInstanceCollection {
    /**
     * 
     * @type {boolean}
     * @memberof AddressNFTInstanceCollection
     */
    isUnique: boolean;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    id: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    holderAddressHash?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    imageUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    animationUrl?: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    externalAppUrl?: string;
    /**
     * 
     * @type {object}
     * @memberof AddressNFTInstanceCollection
     */
    metadata?: object;
    /**
     * 
     * @type {AddressParam}
     * @memberof AddressNFTInstanceCollection
     */
    owner: AddressParam;
    /**
     * 
     * @type {object}
     * @memberof AddressNFTInstanceCollection
     */
    token?: object;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    tokenType: string;
    /**
     * 
     * @type {string}
     * @memberof AddressNFTInstanceCollection
     */
    value: string;
}

/**
 * Check if a given object implements the AddressNFTInstanceCollection interface.
 */
export function instanceOfAddressNFTInstanceCollection(value: object): boolean {
    if (!('isUnique' in value)) return false;
    if (!('id' in value)) return false;
    if (!('owner' in value)) return false;
    if (!('tokenType' in value)) return false;
    if (!('value' in value)) return false;
    return true;
}

export function AddressNFTInstanceCollectionFromJSON(json: any): AddressNFTInstanceCollection {
    return AddressNFTInstanceCollectionFromJSONTyped(json, false);
}

export function AddressNFTInstanceCollectionFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressNFTInstanceCollection {
    if (json == null) {
        return json;
    }
    return {
        
        'isUnique': json['is_unique'],
        'id': json['id'],
        'holderAddressHash': json['holder_address_hash'] == null ? undefined : json['holder_address_hash'],
        'imageUrl': json['image_url'] == null ? undefined : json['image_url'],
        'animationUrl': json['animation_url'] == null ? undefined : json['animation_url'],
        'externalAppUrl': json['external_app_url'] == null ? undefined : json['external_app_url'],
        'metadata': json['metadata'] == null ? undefined : json['metadata'],
        'owner': AddressParamFromJSON(json['owner']),
        'token': json['token'] == null ? undefined : json['token'],
        'tokenType': json['token_type'],
        'value': json['value'],
    };
}

export function AddressNFTInstanceCollectionToJSON(value?: AddressNFTInstanceCollection | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'is_unique': value['isUnique'],
        'id': value['id'],
        'holder_address_hash': value['holderAddressHash'],
        'image_url': value['imageUrl'],
        'animation_url': value['animationUrl'],
        'external_app_url': value['externalAppUrl'],
        'metadata': value['metadata'],
        'owner': AddressParamToJSON(value['owner']),
        'token': value['token'],
        'token_type': value['tokenType'],
        'value': value['value'],
    };
}

