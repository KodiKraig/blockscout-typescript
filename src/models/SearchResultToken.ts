/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface SearchResultToken
 */
export interface SearchResultToken {
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    address: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    addressUrl: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    exchangeRate: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    iconUrl: string;
    /**
     * 
     * @type {boolean}
     * @memberof SearchResultToken
     */
    isSmartContractVerified: boolean;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    symbol: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    tokenType: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    tokenUrl: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    totalSupply: string;
    /**
     * 
     * @type {string}
     * @memberof SearchResultToken
     */
    type: string;
}

/**
 * Check if a given object implements the SearchResultToken interface.
 */
export function instanceOfSearchResultToken(value: object): boolean {
    if (!('address' in value)) return false;
    if (!('addressUrl' in value)) return false;
    if (!('exchangeRate' in value)) return false;
    if (!('iconUrl' in value)) return false;
    if (!('isSmartContractVerified' in value)) return false;
    if (!('name' in value)) return false;
    if (!('symbol' in value)) return false;
    if (!('tokenType' in value)) return false;
    if (!('tokenUrl' in value)) return false;
    if (!('totalSupply' in value)) return false;
    if (!('type' in value)) return false;
    return true;
}

export function SearchResultTokenFromJSON(json: any): SearchResultToken {
    return SearchResultTokenFromJSONTyped(json, false);
}

export function SearchResultTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): SearchResultToken {
    if (json == null) {
        return json;
    }
    return {
        
        'address': json['address'],
        'addressUrl': json['address_url'],
        'exchangeRate': json['exchange_rate'],
        'iconUrl': json['icon_url'],
        'isSmartContractVerified': json['is_smart_contract_verified'],
        'name': json['name'],
        'symbol': json['symbol'],
        'tokenType': json['token_type'],
        'tokenUrl': json['token_url'],
        'totalSupply': json['total_supply'],
        'type': json['type'],
    };
}

export function SearchResultTokenToJSON(value?: SearchResultToken | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'address': value['address'],
        'address_url': value['addressUrl'],
        'exchange_rate': value['exchangeRate'],
        'icon_url': value['iconUrl'],
        'is_smart_contract_verified': value['isSmartContractVerified'],
        'name': value['name'],
        'symbol': value['symbol'],
        'token_type': value['tokenType'],
        'token_url': value['tokenUrl'],
        'total_supply': value['totalSupply'],
        'type': value['type'],
    };
}

