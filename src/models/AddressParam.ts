/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressTag } from './AddressTag';
import {
    AddressTagFromJSON,
    AddressTagFromJSONTyped,
    AddressTagToJSON,
} from './AddressTag';
import type { WatchlistName } from './WatchlistName';
import {
    WatchlistNameFromJSON,
    WatchlistNameFromJSONTyped,
    WatchlistNameToJSON,
} from './WatchlistName';

/**
 * 
 * @export
 * @interface AddressParam
 */
export interface AddressParam {
    /**
     * 
     * @type {string}
     * @memberof AddressParam
     */
    hash: string;
    /**
     * 
     * @type {string}
     * @memberof AddressParam
     */
    implementationName: string;
    /**
     * 
     * @type {string}
     * @memberof AddressParam
     */
    name: string;
    /**
     * 
     * @type {boolean}
     * @memberof AddressParam
     */
    isContract: boolean;
    /**
     * 
     * @type {Array<AddressTag>}
     * @memberof AddressParam
     */
    privateTags: Array<AddressTag>;
    /**
     * 
     * @type {Array<WatchlistName>}
     * @memberof AddressParam
     */
    watchlistNames: Array<WatchlistName>;
    /**
     * 
     * @type {Array<AddressTag>}
     * @memberof AddressParam
     */
    publicTags: Array<AddressTag>;
    /**
     * 
     * @type {boolean}
     * @memberof AddressParam
     */
    isVerified: boolean;
}

/**
 * Check if a given object implements the AddressParam interface.
 */
export function instanceOfAddressParam(value: object): boolean {
    if (!('hash' in value)) return false;
    if (!('implementationName' in value)) return false;
    if (!('name' in value)) return false;
    if (!('isContract' in value)) return false;
    if (!('privateTags' in value)) return false;
    if (!('watchlistNames' in value)) return false;
    if (!('publicTags' in value)) return false;
    if (!('isVerified' in value)) return false;
    return true;
}

export function AddressParamFromJSON(json: any): AddressParam {
    return AddressParamFromJSONTyped(json, false);
}

export function AddressParamFromJSONTyped(json: any, ignoreDiscriminator: boolean): AddressParam {
    if (json == null) {
        return json;
    }
    return {
        
        'hash': json['hash'],
        'implementationName': json['implementation_name'],
        'name': json['name'],
        'isContract': json['is_contract'],
        'privateTags': ((json['private_tags'] as Array<any>).map(AddressTagFromJSON)),
        'watchlistNames': ((json['watchlist_names'] as Array<any>).map(WatchlistNameFromJSON)),
        'publicTags': ((json['public_tags'] as Array<any>).map(AddressTagFromJSON)),
        'isVerified': json['is_verified'],
    };
}

export function AddressParamToJSON(value?: AddressParam | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'hash': value['hash'],
        'implementation_name': value['implementationName'],
        'name': value['name'],
        'is_contract': value['isContract'],
        'private_tags': ((value['privateTags'] as Array<any>).map(AddressTagToJSON)),
        'watchlist_names': ((value['watchlistNames'] as Array<any>).map(WatchlistNameToJSON)),
        'public_tags': ((value['publicTags'] as Array<any>).map(AddressTagToJSON)),
        'is_verified': value['isVerified'],
    };
}

