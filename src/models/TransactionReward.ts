/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { AddressParam } from './AddressParam';
import {
    AddressParamFromJSON,
    AddressParamFromJSONTyped,
    AddressParamToJSON,
} from './AddressParam';

/**
 * 
 * @export
 * @interface TransactionReward
 */
export interface TransactionReward {
    /**
     * 
     * @type {object}
     * @memberof TransactionReward
     */
    types: object;
    /**
     * 
     * @type {string}
     * @memberof TransactionReward
     */
    emissionReward: string;
    /**
     * 
     * @type {string}
     * @memberof TransactionReward
     */
    blockHash: string;
    /**
     * 
     * @type {AddressParam}
     * @memberof TransactionReward
     */
    from: AddressParam;
    /**
     * 
     * @type {AddressParam}
     * @memberof TransactionReward
     */
    to: AddressParam;
}

/**
 * Check if a given object implements the TransactionReward interface.
 */
export function instanceOfTransactionReward(value: object): boolean {
    if (!('types' in value)) return false;
    if (!('emissionReward' in value)) return false;
    if (!('blockHash' in value)) return false;
    if (!('from' in value)) return false;
    if (!('to' in value)) return false;
    return true;
}

export function TransactionRewardFromJSON(json: any): TransactionReward {
    return TransactionRewardFromJSONTyped(json, false);
}

export function TransactionRewardFromJSONTyped(json: any, ignoreDiscriminator: boolean): TransactionReward {
    if (json == null) {
        return json;
    }
    return {
        
        'types': json['types'],
        'emissionReward': json['emission_reward'],
        'blockHash': json['block_hash'],
        'from': AddressParamFromJSON(json['from']),
        'to': AddressParamFromJSON(json['to']),
    };
}

export function TransactionRewardToJSON(value?: TransactionReward | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'types': value['types'],
        'emission_reward': value['emissionReward'],
        'block_hash': value['blockHash'],
        'from': AddressParamToJSON(value['from']),
        'to': AddressParamToJSON(value['to']),
    };
}

