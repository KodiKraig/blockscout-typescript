/* tslint:disable */
/* eslint-disable */
/**
 * BlockScout API
 * API for BlockScout web app
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: you@your-company.com
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface StatsResponse
 */
export interface StatsResponse {
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    totalBlocks: string;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    totalAddresses: string;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    totalTransactions: string;
    /**
     * 
     * @type {number}
     * @memberof StatsResponse
     */
    averageBlockTime: number;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    coinPrice: string;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    totalGasUsed: string;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    transactionsToday: string;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    gasUsedToday: string;
    /**
     * 
     * @type {object}
     * @memberof StatsResponse
     */
    gasPrices: object;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    staticGasPrice: string;
    /**
     * 
     * @type {string}
     * @memberof StatsResponse
     */
    marketCap: string;
    /**
     * 
     * @type {number}
     * @memberof StatsResponse
     */
    networkUtilizationPercentage: number;
}

/**
 * Check if a given object implements the StatsResponse interface.
 */
export function instanceOfStatsResponse(value: object): boolean {
    if (!('totalBlocks' in value)) return false;
    if (!('totalAddresses' in value)) return false;
    if (!('totalTransactions' in value)) return false;
    if (!('averageBlockTime' in value)) return false;
    if (!('coinPrice' in value)) return false;
    if (!('totalGasUsed' in value)) return false;
    if (!('transactionsToday' in value)) return false;
    if (!('gasUsedToday' in value)) return false;
    if (!('gasPrices' in value)) return false;
    if (!('staticGasPrice' in value)) return false;
    if (!('marketCap' in value)) return false;
    if (!('networkUtilizationPercentage' in value)) return false;
    return true;
}

export function StatsResponseFromJSON(json: any): StatsResponse {
    return StatsResponseFromJSONTyped(json, false);
}

export function StatsResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): StatsResponse {
    if (json == null) {
        return json;
    }
    return {
        
        'totalBlocks': json['total_blocks'],
        'totalAddresses': json['total_addresses'],
        'totalTransactions': json['total_transactions'],
        'averageBlockTime': json['average_block_time'],
        'coinPrice': json['coin_price'],
        'totalGasUsed': json['total_gas_used'],
        'transactionsToday': json['transactions_today'],
        'gasUsedToday': json['gas_used_today'],
        'gasPrices': json['gas_prices'],
        'staticGasPrice': json['static_gas_price'],
        'marketCap': json['market_cap'],
        'networkUtilizationPercentage': json['network_utilization_percentage'],
    };
}

export function StatsResponseToJSON(value?: StatsResponse | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'total_blocks': value['totalBlocks'],
        'total_addresses': value['totalAddresses'],
        'total_transactions': value['totalTransactions'],
        'average_block_time': value['averageBlockTime'],
        'coin_price': value['coinPrice'],
        'total_gas_used': value['totalGasUsed'],
        'transactions_today': value['transactionsToday'],
        'gas_used_today': value['gasUsedToday'],
        'gas_prices': value['gasPrices'],
        'static_gas_price': value['staticGasPrice'],
        'market_cap': value['marketCap'],
        'network_utilization_percentage': value['networkUtilizationPercentage'],
    };
}

